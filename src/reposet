#!/bin/bash
#
# Contains the command 'reposet'.
# Dispatches to the given subcommands or prints the help-message.
#
# author: andreasl

function show_usage {
    script_name="${0##*/}"

    msg="${script_name}\n"
    msg="${msg}A flexible and simple command to deal with sets of git repositories.\n\n"
    msg="${msg}Reposet provides a handful of subcommands to run common or specified actions on sets"
    msg="${msg} of git repositories.\n"
    msg="${msg}\n"
    msg="${msg}Commands are:\n"
    msg="${msg}\n"
    msg="${msg}  ${script_name} apply      - execute a given bash command or series of commands\n"
    msg="${msg}  ${script_name} list       - list contents of given reposets\n"
    msg="${msg}  ${script_name} list-sets  - list reposets\n"
    msg="${msg}  ${script_name} pull       - pull from a remote\n"
    msg="${msg}  ${script_name} push       - push to a remote\n"
    msg="${msg}  ${script_name} status     - show status of repositories\n"
    msg="${msg}  ${script_name} sync       - combined pull and push\n"
    msg="${msg}\n"
    msg="${msg}Usage:\n"
    msg="${msg}  ${script_name} [<subcommand>] [...]\n"
    msg="${msg}\n"
    msg="${msg}Examples:\n"
    msg="${msg}  ${script_name}                       # print the status of the repositories in the default reposet\n"
    msg="${msg}  ${script_name} pull work             # call git pull --rebase on all repos in the reposet \"work\"\n"
    msg="${msg}  ${script_name} push my work          # call git push on all repos in the reposets \"my\" and \"work\"\n"
    msg="${msg}  ${script_name} apply -q my -- ls -al # call \`ls -al\` on each repository in the reposet \"my\"\n"
    msg="${msg}  ${script_name} -h                    # print the usage message\n"
    msg="${msg}  ${script_name} --help                # print the usage message\n"
    msg="${msg}\n"
    msg="${msg}For more information visit http://github.com/langenhagen/reposet.\n"
    printf "$msg"
}

function show_version {
    printf 'reposet version %s\n' '0.8.2'
}

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

if [ "$#" -gt '0' ] ; then
    subcommand="$1"
    shift
    case "${subcommand}" in
    -h|--help|help)
        show_usage
        ;;
    -v|--version|version)
        show_version
        ;;
    apply)
        bash "${script_dir}/reposet-apply" "$@"
        ;;
    list-sets|sets)
        bash "${script_dir}/reposet-list-sets" "$@"
        ;;
    list|ls)
        bash "${script_dir}/reposet-list" "$@"
        ;;
    pull|down)
        bash "${script_dir}/reposet-pull" "$@"
        ;;
    push|up)
        bash "${script_dir}/reposet-push" "$@"
        ;;
    status)
        bash "${script_dir}/reposet-status" "$@"
        ;;
    sync)
        bash "${script_dir}/reposet-sync" "$@"
        ;;
    *) # unknown option
        first_reposet="$subcommand"
        bash "${script_dir}/reposet-status" "$first_reposet" "$@"
        ;;
    esac
else
    bash "${script_dir}/reposet-status"
fi

exit "$?"
