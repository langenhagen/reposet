#!/bin/bash
#
# Lists the repos in the given reposets.
#
# author: andreasl

function show_usage {
    script_name="${0##*/}"

    msg="${script_name}\n"
    msg="${msg}Lists the repos in the given reposets.\n"
    msg="${msg}By default, prints the paths to the repos, but can also print the other information"
    msg="${msg} stored in the reposets.\n"
    msg="${msg}\n"
    msg="${msg}Usage:\n"
    msg="${msg}  ${script_name} [OPTIONS] [<reposet>...]\n"
    msg="${msg}\n"
    msg="${msg}Options:\n"
    msg="${msg}  -a, --all               Prints all information about each repo.\n"
    msg="${msg}                          Implies --branch, --pull and --push.\n"
    msg="${msg}  -b, --branch            Prints local default branch name.\n"
    msg="${msg}  -n, --no-numbers        Omits the number that preceedes each output line.\n"
    msg="${msg}  --pull                  Prints the remote and remote branch used to pull.\n"
    msg="${msg}                          Implies --pull-remote and --pull-branch.\n"
    msg="${msg}  --pull-branch           Prints the remote branch name from which to pull.\n"
    msg="${msg}  --pull-remote           Prints the remote name from which to pull.\n"
    msg="${msg}  --push                  Prints the remote and remote branch used to push.\n"
    msg="${msg}                          Implies --push-remote and --push-branch.\n"
    msg="${msg}  --push-branch           Prints the remote branch name to which to push.\n"
    msg="${msg}  --push-remote           Prints the remote name to which to push.\n"
    msg="${msg}  -r, --raw               Prints the raw repo definition lines.\n"
    msg="${msg}  -s, --summary           Prints the number of found repos at the last line.\n"
    msg="${msg}\n"
    msg="${msg}Examples:\n"
    msg="${msg}  ${script_name}                  # Lists repo paths from the default reposet\n"
    msg="${msg}  ${script_name} my               # Lists repo paths from the reposet \"my\"\n"
    msg="${msg}  ${script_name} -all my work     # Lists all repo info from the reposets \"my\" and \"work\"\n"
    msg="${msg}  ${script_name} -a -n -s my      # Lists all repo info from the reposet \"my\" without line numbers and with a summary line\n"
    msg="${msg}  ${script_name} -h               # prints the usage message\n"
    msg="${msg}  ${script_name} --help           # prints the usage message\n"
    printf "$msg"
}

show_numbers=true
while [ $# -gt 0 ] ; do
    case "$1" in
    -h|--help)
        show_usage
        exit 0
        ;;
    -a|--all)
        show_local_branch=true
        show_pull_branch=true
        show_pull_remote=true
        show_push_branch=true
        show_push_remote=true
        ;;
    -b|--branch)
        show_local_branch=true
        ;;
    -n|--no-numbers)
        show_numbers=false
        ;;
    --pull)
        show_pull_branch=true
        show_pull_remote=true
        ;;
    --pull-branch)
        show_pull_branch=true
        ;;
    --pull-remote)
        show_pull_remote=true
        ;;
    --push)
        show_push_branch=true
        show_push_remote=true
        ;;
    --push-branch)
        show_push_branch=true
        ;;
    --push-remote)
        show_push_remote=true
        ;;
    -r|--raw)
        show_raw_output=true
        ;;
    -s|--summary)
        print_summary_line=true
        ;;
    *) # reposet name / unknown option
        reposets+=("$1")
        ;;
    esac
    shift # past argument or value
done

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=src/reposet.inc.sh
source "${script_dir}/reposet.inc.sh"
load_reposets_or_die "${reposets[@]}"

if [ "$show_raw_output" != true ] ; then
    [ "$show_numbers" = true ] && printf '%-3s ' "NR";
    printf '%-50s' "REPO_PATH"
    [ "$show_local_branch" = true ] && printf '%-15s ' "LOCAL_BRANCH"
    [ "$show_pull_remote" = true ] && printf '%-15s ' "PULL_REMOTE"
    [ "$show_pull_branch" = true ] && printf '%-20s ' "REMOTE_PULL_BRANCH"
    [ "$show_push_remote" = true ] && printf '%-15s ' "PUSH_REMOTE"
    [ "$show_push_branch" = true ] && printf '%-20s ' "REMOTE_PUSH_BRANCH"
    printf '\n'
fi

for repo in "${_repos[@]}"; do
    set_common_repo_variables "$repo"
    n_current_repo++

    [ "$show_numbers" = true ] && printf '%-3s ' "${n_current_repo}:";

    if [ "$show_raw_output" = true ] ; then
            printf '%s\n' "$repo"
    else
        printf '%-50s' "$repo_path"
        [ "$show_local_branch" = true ] && printf '%-15s ' "$local_branch"
        [ "$show_pull_remote" = true ] && printf '%-15s ' "$pull_remote"
        [ "$show_pull_branch" = true ] && printf '%-20s ' "$pull_branch"
        [ "$show_push_remote" = true ] && printf '%-15s ' "$push_remote"
        [ "$show_push_branch" = true ] && printf '%-20s ' "$push_branch"
        printf '\n'
    fi
done

[ "$print_summary_line" = true ] && printf '%s repositories.\n' "$n_repos";
