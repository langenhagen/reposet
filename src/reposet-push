#!/bin/bash
#
# author: andreasl

script_name="${0##*/}"
IFS= read -r -d '' script_description << HELP_EOF
${script_name}
Pushes the local default branches to the default remotes and branches.
Aborts and reports as soon as an error occurs.
If no errors are catched, runs \`git status --short --untracked-files\` for each repo afterwards.

Usage:
  ${script_name} [<reposet>...]

Examples:
  ${script_name}             # calls \`git push\` on all repos in the default reposet
  ${script_name} my          # calls \`git push\` on all repos in the reposet \"my\"
  ${script_name} my work     # calls \`git push\` on all repos in the reposets \"my\" and \"work\"
  ${script_name} -h          # prints the usage message
  ${script_name} --help      # prints the usage message
HELP_EOF

while [ $# -gt 0 ] ; do
    case "$1" in
    -h|--help)
        printf -- "$script_description"
        exit 0
        ;;
    *) # reposet name / unknown option
        break
        ;;
    esac
    shift # past argument or value
done

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=reposet.inc.sh
source "${script_dir}/reposet.inc.sh"
load_reposets_or_die "$@"

for repo in "${_repos[@]}"; do
    set_common_repo_variables "$repo"
    n_current_repo++
    cd_to_repo_or_die 1
    print_current_repo_and_progress
    check_if_local_branch_exists_or_die 2
    git_push_or_die
done

print_all_repos_status_or_die 3

[ -n "$error_msgs" ] && >&2 printf -- "${r}${error_msgs}${n}\n"
