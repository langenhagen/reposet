#!/bin/bash
# author: andreasl

script_name="${0##*/}"
IFS= read -r -d '' script_description << HELP_EOF
${script_name}
Call a given bash command or series of commands on each repository in the given reposets.

Usage:
  ${script_name} [-q|--quiet] [<reposet>...] [-- <command>]

Options:
  -q, --quiet:    Omit progress information.

Examples:
  ${script_name}                       # list all repositories in the default reposet
  ${script_name} my                    # list all repositories in the reposet \"my\"
  ${script_name} my work               # list all repositories in the reposet \"my\" and \"work\"
  ${script_name} -- ls                 # list all repositories and calls \`ls\` on the path of all git repos
  ${script_name} -q -- ls              # call \`ls\` on the path of all git repos but do not list the git repos
  ${script_name} -q -- 'echo \$PWD'     # print the path of each git repo
  ${script_name} -h                    # print the usage message
  ${script_name} --help                # print the usage message

Note:
  If you want to use subshell related-variables, like e.g. \$PWD, wrap them into single quotation
  marks '' so that they will not be expanded immediately.
HELP_EOF

script_dir="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
# shellcheck source=reposet.inc.sh
source "${script_dir}/reposet.inc.sh"

reposets=()
while [ $# -gt 0 ]; do
    case "$1" in
    -q|--quiet)
        quiet=true
        ;;
    --)
        shift
        command="$*"
        break
        ;;
    -h|--help)
        printf -- "$script_description"
        exit 0
        ;;
    *) # reposet name / unknown option
        reposets+=("$1")
        ;;
    esac
    shift
done

load_reposets_or_die "${reposets[@]}"

for repo in "${_repos[@]}"; do
    set_common_repo_variables "$repo"
    n_current_repo++

    [ "$quiet" == true ] || print_current_repo_and_progress
    cd_to_repo_or_die 1
    eval "$command"
done
